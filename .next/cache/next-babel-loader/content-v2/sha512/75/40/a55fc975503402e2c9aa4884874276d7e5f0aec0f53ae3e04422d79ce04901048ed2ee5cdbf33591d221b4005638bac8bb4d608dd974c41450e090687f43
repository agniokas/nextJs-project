{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\agnio\\\\Desktop\\\\CODING\\\\practice\\\\meetupsProject\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/4/47/Town_Cityscape.svg',\n  address: 'Some Address 1234 Some City',\n  description: 'This is some meetup'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/4/47/Town_Cityscape.svg',\n  address: 'Some Address 1234 Some City',\n  description: 'This is some meetup'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  //fetch data from API\n  const client = await MongoClient.connect('mongodb+srv://agniokas:WinterIsC0ming@cluster0.p4pnk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.data.title,\n        address: meetup.data.address,\n        image: meetup.data.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 //number means seconds how often the page shpould be updated\n\n  };\n} // export async function getServerSideProps(context) {\n//   const request = context.req\n//   const response = context.res\n//   // fetch data from an API\n//   return {\n//     props: DUMMY_MEETUPS\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/agnio/Desktop/CODING/practice/meetupsProject/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","data","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wEAJJ;AAKEC,EAAAA,OAAO,EAAE,6BALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,wEAJJ;AAKEC,EAAAA,OAAO,EAAE,6BALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACC,IAAP,CAAYlB,KADa;AAEhCE,QAAAA,OAAO,EAAEe,MAAM,CAACC,IAAP,CAAYhB,OAFW;AAGhCD,QAAAA,KAAK,EAAEgB,MAAM,CAACC,IAAP,CAAYjB,KAHa;AAIhCF,QAAAA,EAAE,EAAEkB,MAAM,CAACE,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,EATP,CASW;;AATX,GAAP;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAejB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: 'm1',\r\n    title: 'A First Meetup',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/4/47/Town_Cityscape.svg',\r\n    address: 'Some Address 1234 Some City',\r\n    description: 'This is some meetup',\r\n  },\r\n  {\r\n    id: 'm2',\r\n    title: 'A Second Meetup',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/4/47/Town_Cityscape.svg',\r\n    address: 'Some Address 1234 Some City',\r\n    description: 'This is some meetup',\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  //fetch data from API\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://agniokas:WinterIsC0ming@cluster0.p4pnk.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 10, //number means seconds how often the page shpould be updated\r\n  };\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const request = context.req\r\n//   const response = context.res\r\n//   // fetch data from an API\r\n//   return {\r\n//     props: DUMMY_MEETUPS\r\n//   }\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}